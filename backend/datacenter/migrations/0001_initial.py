# Generated by Django 5.0 on 2024-08-21 19:05

import datetime
import django.db.models.deletion
import phonenumber_field.modelfields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Berry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Название ягоды')),
                ('price', models.FloatField(verbose_name='Цена')),
            ],
            options={
                'verbose_name': ('Ягода для торта',),
                'verbose_name_plural': 'Ягоды для торта',
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_tg', models.IntegerField(blank=True, null=True, unique=True, verbose_name='id в телеграмм')),
                ('full_name', models.CharField(max_length=200, verbose_name='ФИО')),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128, null=True, region='RU')),
            ],
            options={
                'verbose_name': ('Клиент',),
                'verbose_name_plural': 'Клиенты',
            },
        ),
        migrations.CreateModel(
            name='Decor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Название декора')),
                ('price', models.FloatField(verbose_name='Цена')),
            ],
            options={
                'verbose_name': ('Декор для торта',),
                'verbose_name_plural': 'Декоры для торта',
            },
        ),
        migrations.CreateModel(
            name='Form',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Название формы')),
                ('price', models.FloatField(verbose_name='Цена')),
            ],
            options={
                'verbose_name': ('Форма для торта',),
                'verbose_name_plural': 'Формы для торта',
            },
        ),
        migrations.CreateModel(
            name='Level',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Название уровня')),
                ('price', models.FloatField(verbose_name='Цена')),
            ],
            options={
                'verbose_name': ('Размер/уровень для торта',),
                'verbose_name_plural': 'Размеры/уровни для торта',
            },
        ),
        migrations.CreateModel(
            name='TimeFrames',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('workday_start', models.TimeField(default=datetime.time(9, 0), verbose_name='Время начала рабочего дня')),
                ('workday_end', models.TimeField(default=datetime.time(18, 0), verbose_name='Время окончания рабочего дня')),
                ('minimum_lead_time', models.IntegerField(default=12, verbose_name='Минимальное время доставки (в часах)')),
                ('maximum_expedited_lead_time', models.IntegerField(default=24, verbose_name='Максимальное время ускоренной доставки (в часах)')),
            ],
            options={
                'verbose_name': ('Временные рамки',),
                'verbose_name_plural': 'Временные рамки',
            },
        ),
        migrations.CreateModel(
            name='Topping',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Название топпинга')),
                ('price', models.FloatField(verbose_name='Цена')),
            ],
            options={
                'verbose_name': ('Топпинг для торта',),
                'verbose_name_plural': 'Топпинги для торта',
            },
        ),
        migrations.CreateModel(
            name='Cake',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=200, null=True, verbose_name='Название торта')),
                ('price', models.FloatField(verbose_name='Цена торта')),
                ('inscription', models.CharField(blank=True, max_length=200, null=True, verbose_name='Надпись на торте')),
                ('berry', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='datacenter.berry', verbose_name='Ягода')),
                ('decor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='datacenter.decor', verbose_name='Декор')),
                ('form', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='datacenter.form', verbose_name='Форма')),
                ('level', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='datacenter.level', verbose_name='Количество уровней торта')),
                ('topping', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='datacenter.topping', verbose_name='Топпинг')),
            ],
            options={
                'verbose_name': ('Торт',),
                'verbose_name_plural': 'Торты',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('waiting', 'Ожидает оплаты'), ('paid', 'Оплачено'), ('cancel', 'Отменено')], max_length=14, verbose_name='Статус заказа')),
                ('receipt', models.URLField(blank=True, verbose_name='Чек')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Счёт выставлен')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Последнее обновление')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='datacenter.client', verbose_name='Клиент')),
            ],
            options={
                'verbose_name': ('Счет на оплату',),
                'verbose_name_plural': 'Счета на оплату',
            },
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('accepted', 'Принято'), ('ended', 'Завершено'), ('discard', 'Отменено')], max_length=9, verbose_name='Статус заказа')),
                ('date', models.DateField(verbose_name='Дата доставки')),
                ('time', models.TimeField(verbose_name='Время доставки')),
                ('extra_delivery_speed', models.BooleanField(default=False, verbose_name='Доп. плата за скорость доставки')),
                ('cake', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='datacenter.cake')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='datacenter.client')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='datacenter.order')),
            ],
            options={
                'verbose_name': ('Заказ',),
                'verbose_name_plural': 'Заказы',
            },
        ),
    ]
